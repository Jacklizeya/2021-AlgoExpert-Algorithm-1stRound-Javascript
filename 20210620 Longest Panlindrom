function longestPalindromicSubstring(string) {
  // Write your code here.

if (string.length === 1 ) {return string}	

let maxExpansion = 0
let maxPalindrom = ""

for (i = 0 ; i < string.length; i++) {    
//  centre expansion
    for (j = 1; i - j >= 0 && i+j <= string.length -1 ; j++) {
        console.log(i, j)
        if (string[i-j] !== string[i+j]) {
            if (2 * j - 1 > maxExpansion) {maxExpansion = 2 * j - 1; maxPalindrom = string.substring(i-j+1, i+j);}
            break;
        }
        if (string[i-j] === string[i+j] && ( i-j ===0 || i+j === string.length-1)) {
            if (2 * j + 1 > maxExpansion) {maxExpansion = 2 * j + 1 ; maxPalindrom = string.substring(i-j, i+j+1);}
        }
    }
//  left or right expansion
    for (j = 1; i - j + 1 >= 0 && i+j < string.length; j++) {
        console.log(i, j)
        if (string[i-j + 1] !== string[i+j]) {
            if (2* j - 2 > maxExpansion) {maxExpansion = 2* j -2 ; maxPalindrom = string.substring(i-j+2, i+j);}
            break;
        }
        if (string[i-j + 1] === string[i+j] && ( i-j + 1 ===0 || i+j === string.length-1)) {
            if (2 * j> maxExpansion) {maxExpansion = 2 * j; maxPalindrom = string.substring(i-j + 1, i+j+1);}
        }
    }

    for (j = 1; i - j >= 0 && i+j-1 < string.length; j++) {
        console.log(i, j)
        if (string[i-j] !== string[i+j-1]) {
            if ( 2 * j - 2 > maxExpansion) {maxExpansion = 2 * j - 2; maxPalindrom = string.substring(i-j+1, i+j-1);}
            break;
        }
        if (string[i-j] === string[i+j-1] && ( i-j ===0 || i+j-1 === string.length-1)) {
            if (2 * j> maxExpansion) {maxExpansion = 2 * j; maxPalindrom = string.substring(i-j, i+j);}
        }
    }
}

return (maxPalindrom)
	
}

// Do not edit the line below.
exports.longestPalindromicSubstring = longestPalindromicSubstring;
